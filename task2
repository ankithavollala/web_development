<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            margin: 0;
            font-family: Helvetica, Arial, sans-serif;
            height: 100vh;
            background: url("https://i.pinimg.com/originals/ac/54/a1/ac54a128942c750799c2c1fe144d2467.jpg") no-repeat center center fixed;
            background-size: cover;
            overflow: hidden;
            display: flex;
            justify-content: flex-end;
            align-items: flex-start;
            padding: 20px;
            box-sizing: border-box;
        }

        .task-container {
            display: flex;
            gap: 10px;
            width: 280px; /* Adjust the width if needed */
            flex-direction: column;
            position: absolute;
            top: 20px;
            right: 40px; /* Move the container slightly to the left */
        }

        .task-list {
            flex: 1;
            background: rgba(255, 255, 255, 0.8);
            padding: 10px;
            border-radius: 8px;
            overflow-y: auto;
            max-height: 30vh;
            width: 100%;
        }

        .task-list h2 {
            text-align: center;
            font-size: 1em;
            margin-bottom: 10px;
        }

        .task-item {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
        }

        .task-text {
            flex: 1;
            text-align: center;
            font-weight: bold;
        }

        .task-text.priority-high {
            font-size: 1.2em;
            color: #f44336;
        }

        .task-text.priority-medium {
            font-size: 1em;
            color: #ff9800;
        }

        .task-text.priority-low {
            font-size: 0.85em;
            color: #4caf50;
        }

        .task-text.completed {
            text-decoration: line-through;
            color: gray;
        }

        .task-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .task-actions button {
            padding: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            background-color: #f44336;
            color: white;
            font-size: 0.8em;
        }

        .task-actions button:hover {
            background-color: #c62828;
        }

        .task-checkbox {
            margin-right: 10px;
            transform: scale(1.2);
        }

        .add-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #4caf50;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            font-size: 24px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .add-button:hover {
            background-color: #388e3c;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 400px;
            border-radius: 8px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .input-group {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-bottom: 20px;
        }

        .input-group input, .input-group select, .input-group button {
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
            width: 100%;
        }

        .input-group button {
            background-color: #4caf50;
            color: white;
            cursor: pointer;
            border: none;
        }

        .input-group button:hover {
            background-color: #388e3c;
        }
    </style>
</head>
<body>
    <div class="task-container">
        <div class="task-list" id="high-priority-list">
            <h2>High Priority</h2>
        </div>
        <div class="task-list" id="medium-priority-list">
            <h2>Medium Priority</h2>
        </div>
        <div class="task-list" id="low-priority-list">
            <h2>Low Priority</h2>
        </div>
    </div>
    <button class="add-button" id="add-button">+</button>

    <div id="taskModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="input-group">
                <input type="text" id="task-input" placeholder="Add a new task">
                <input type="date" id="due-date">
                <select id="category">
                    <option value="Personal">Personal</option>
                    <option value="Work">Work</option>
                    <option value="Shopping">Shopping</option>
                    <option value="Others">Others</option>
                </select>
                <select id="priority">
                    <option value="High">High</option>
                    <option value="Medium">Medium</option>
                    <option value="Low">Low</option>
                </select>
                <button id="save-task">Save Task</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addButton = document.getElementById('add-button');
            const modal = document.getElementById('taskModal');
            const closeModal = document.getElementsByClassName('close')[0];
            const saveTaskButton = document.getElementById('save-task');
            const taskInput = document.getElementById('task-input');
            const dueDateInput = document.getElementById('due-date');
            const categoryInput = document.getElementById('category');
            const priorityInput = document.getElementById('priority');
            const highPriorityList = document.getElementById('high-priority-list');
            const mediumPriorityList = document.getElementById('medium-priority-list');
            const lowPriorityList = document.getElementById('low-priority-list');

            addButton.addEventListener('click', () => {
                modal.style.display = 'block';
            });

            closeModal.addEventListener('click', () => {
                modal.style.display = 'none';
            });

            window.addEventListener('click', (event) => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });

            saveTaskButton.addEventListener('click', () => {
                const taskText = taskInput.value.trim();
                const dueDate = dueDateInput.value;
                const category = categoryInput.value;
                const priority = priorityInput.value;

                if (taskText !== '') {
                    addTask(taskText, priority);
                    taskInput.value = '';
                    dueDateInput.value = '';
                    categoryInput.value = 'Personal';
                    priorityInput.value = 'Medium';
                    modal.style.display = 'none';
                }
            });

            function addTask(text, priority) {
                const taskItem = document.createElement('div');
                taskItem.className = 'task-item';

                const taskText = document.createElement('div');
                taskText.className = 'task-text';

                if (priority === 'High') {
                    taskText.classList.add('priority-high');
                    highPriorityList.appendChild(taskItem);
                } else if (priority === 'Medium') {
                    taskText.classList.add('priority-medium');
                    mediumPriorityList.appendChild(taskItem);
                } else if (priority === 'Low') {
                    taskText.classList.add('priority-low');
                    lowPriorityList.appendChild(taskItem);
                }

                taskText.textContent = text;

                const taskActions = document.createElement('div');
                taskActions.className = 'task-actions';

                const completeCheckbox = document.createElement('input');
                completeCheckbox.type = 'checkbox';
                completeCheckbox.className = 'task-checkbox';
                completeCheckbox.addEventListener('change', () => {
                    taskText.classList.toggle('completed', completeCheckbox.checked);
                });

                const deleteButton = document.createElement('button');
                deleteButton.innerText = 'Delete';
                deleteButton.addEventListener('click', () => {
                    taskItem.parentNode.removeChild(taskItem);
                });

                taskActions.appendChild(completeCheckbox);
                taskActions.appendChild(deleteButton);
                taskItem.appendChild(completeCheckbox);
                taskItem.appendChild(taskText);
                taskItem.appendChild(taskActions);
            }
        });
    </script>
</body>
</html>
